3) 수학에서의 함수는 보통 어떤 수식을 정의한 것이다.
예를 들어 f(x) = 2x + 3, f(a, b) = 2a + b 같은 것들을 함수라고 할 수 있다.

프로그래밍에서 함수라는 것은 어떤 특정한 일을 처리하는 기능을 모아놓은 것을 뜻한다.
물론 수학에서 정의하는 함수도 구현이 가능하다. 일반적으로 함수의 라이브러리, 모듈은 여러개의 함수로 구성되며,
이를 통해 프로그래머는 자신만의 함수를 만들 수 있다. 함수의 이름은 대체로 그 함수의 기능을 정확히 나타내도록 하는 것이 좋다.

파이썬에서 함수를 만들 때는 def 을 이용해서 다음과 같은 형식으로 만들어 준다.

def 함수명(매개변수) :
    <수행할 문장1>
    <수행할 문장2>
    ...

함수의 정의 자체만으로는 함수가 실행되지 않기 떄문에 꼭 함수를 호출해주도록 한다.
반대의 경우도 마찬가지로 함수를 호출하기 위해서는 먼저 함수가 정의되어 있어야 한다.

4) 재귀 함수의 호출은 어떤 알고리즘이나 함수가 자기 자신을 호출하여 문제를 해결하도록 하는 프로그래밍 기법이다.
순환(recursion)이라고도 한다. 하나의 함수가 자기 자신을 다시 호출하는 것이기 때문에 다른 함수를 호출하는 것과 동일한 방식으로 진행된다.
피보나치 수열, 하노이 탑, 팩토리얼 등에서 사용하는 방식이다.

파이썬에서도 재귀함수를 사용할 수 있는데 무한정 반복하는 듯 하다가 어느 순간 호출 가능한 최대 깊이를 초과하면 에러를 발생하면서 종료가 된다.
즉, 파이썬에서는 재귀 함수를 이용한 반복 횟수가 한정되어 있다.

파이썬에서는 재귀함수를 다음과 같이 활용할 수 있다.
1 ~ n 까지의 합을 구하는 재귀함수
def sum(n):
    
    if n <= 1:
          return n
    else:
         return sum(n - 1) + n

5) 프랙탈(fractal)은 일부 작은 조각이 전체와 비슷한 기하학적 형태를 뜻하는 말이다. 이러한 특징을 자기 유사성이라고 하는데,
다시 말해서 프랙털은 자기 유사성을 갖는 기하학적 구조를 뜻한다. 즉, fractal graphic은 이러한 프랙털의 특징인 자기 유사성을 이용하여서
재귀적이거나 반복적인 작업에 의한 반복되는 패턴으로 나타낸 그래픽이라고 볼 수 있다.

python에서 사용하는 turtle graphic을 통해서도 fractal graphic을 구현할 수 있는데, 이를 위해서는 재귀함수에 관한 이해와
자기 유사성을 갖는 반복되는 패턴을 코드로 구현할 수 있어야 된다. 